---
const { name, description, url, number, features, date, showArrow = false } = Astro.props;

const Component = url ? "a" : "div";
const commonClasses = "relative flex flex-col justify-between p-6 group bg-neutral-50 dark:bg-neutral-900 rounded-xl transition-colors duration-300 hover:bg-neutral-100 dark:hover:bg-neutral-800";
---

<Component
  {...url ? { href: url, target: "_blank" } : {}}
  class={commonClasses}
>
  <div>
    <div class="flex justify-between items-start mb-4">
      <h3 class="text-xl font-semibold text-neutral-900 dark:text-neutral-100">
        {name}
      </h3>
      <span class="text-2xl font-bold text-neutral-300 dark:text-neutral-700">
        {number.toString().padStart(2, '0')}
      </span>
    </div>
    
    <p class="text-sm text-neutral-600 dark:text-neutral-400 mb-4">
      {description}
    </p>

    {features && features.length > 0 && (
      <ul class="list-disc list-inside space-y-1 text-sm text-neutral-600 dark:text-neutral-400 ml-2">
        {features.map(feature => (
          <li>{feature}</li>
        ))}
      </ul>
    )}
  </div>

  <div class="flex justify-between items-center mt-4 pt-4 border-t border-neutral-200 dark:border-neutral-700">
    {date && (
      <span class="text-sm text-neutral-500 dark:text-neutral-500">{date}</span>
    )}
    {showArrow && (
      <div class="ml-auto">
        <svg
          class={`w-6 h-6 text-neutral-400 dark:text-neutral-500 transform transition-transform ${url ? "group-hover:translate-x-1" : ""}`}
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
        </svg>
      </div>
    )}
  </div>
</Component>